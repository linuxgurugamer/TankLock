// Procedural Parts

@PART[*]:HAS[@MODULE[TankContentSwitcher]:HAS[@TANK_TYPE_OPTION[*]:HAS[@RESOURCE[*],!RESOURCE[SolidFuel],!RESOURCE[Ablator]]]]:NEEDS[ProceduralParts]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// Firespitter Fuel Switch

@PART[*]:HAS[@MODULE[FSfuelSwitch]:HAS[~resourceNames[*SolidFuel*],~resourceNames[*Ablator*]]]:NEEDS[Firespitter]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// Interstellar Fuel Switch

@PART[*]:HAS[@MODULE[InterstellarFuelSwitch]:HAS[~resourceNames[*SolidFuel*],~resourceNames[*Ablator*]]]:NEEDS[InterstellarFuelSwitch]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// B9PartSwitch

@PART[*]:HAS[@MODULE[ModuleB9PartSwitch]:HAS[@SUBTYPE[*]:HAS[#tankType[*]]]]:NEEDS[B9PartSwitch]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// Real Fuels/Modular Fuel Tanks

@PART[*]:HAS[@MODULE[ModuleFuelTanks]:HAS[~type[Solid]]]:NEEDS[RealFuels|ModularFuelTanks]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// Configurable Containers

@PART[*]:HAS[@MODULE[ModuleSwitchableTank]]:NEEDS[ConfigurableContainers]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}

// Any part that has a resource

@PART[*]:HAS[@RESOURCE[*],!RESOURCE[SolidFuel],!RESOURCE[Ablator]]
{
    MODULE
    {
        name = ModuleTankActionLock
    }
}
